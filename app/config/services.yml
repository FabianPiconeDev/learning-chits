# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'

    FabianPiconeDev\Web\Controller\:
        resource: '../../src/Web/Controller'
        public: true
        tags: ['controller.service_arguments']

    fab_pic_dev.application.command_handler.inset_chit_handler:
        class: FabianPiconeDev\Application\CommandHandler\InsertChitHandler
        public: true # temporary. See https://github.com/thephpleague/tactician-bundle Symfony 3.3+
        tags:
            - { name: tactician.handler, command: FabianPiconeDev\Domain\Command\InsertChitCommand }

    Prooph\EventStore\ActionEventEmitterEventStore:
        public: true
        autowire: true
        arguments:
          - '@Prooph\EventStore\Pdo\MySqlEventStore'

    Prooph\EventStore\Pdo\MySqlEventStore:
        autowire: true
        arguments:
            - '@Prooph\Common\Messaging\FQCNMessageFactory'
            - '@PDO'

    Prooph\EventStore\Pdo\PersistenceStrategy\MySqlSingleStreamStrategy:
    Prooph\Common\Event\ProophActionEventEmitter:
    Prooph\Common\Messaging\FQCNMessageFactory:

    PDO:
        class: PDO
        arguments:
          - 'mysql:dbname=%database_name%;host=%database_host%'
          - '%database_user%'
          - '%database_password%'
          - []
